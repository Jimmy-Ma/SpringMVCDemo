<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 实际开发中使用组件扫描加载handler bean -->
	<context:component-scan base-package="com.jimmy.ssm.controller"></context:component-scan>
	
	<!-- 
		静态资源解析
		包括js、css、img...
	 -->
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/img/" mapping="/img/**"></mvc:resources>
	
	<!-- 注解的处理器映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean> -->
	
	<!-- 注解的处理器适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean> -->

	<!-- 
		使用<mvc:annotation-driven>代替上面的处理器映射器和处理器适配器配置
		默认加载很多的参数绑定方法，比如：json转换的解析器
		实际开发中建议使用
	 -->
	<mvc:annotation-driven 
		conversion-service="conversionService" 
		validator="validator">
	</mvc:annotation-driven>
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- 日期类型转换器 -->
				<bean class="com.jimmy.ssm.controller.converter.CustomDateConverter"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 
		视图解析器
		解析jsp，默认使用jstl标签，确保导入了jstl的jar包
		prefix：视图url前缀
		suffix：视图url后缀
		配置前缀和后缀可以简化handler中视图指定的代码
			modelAndView.setViewName("items/itemsList");
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- /WEB-INF/jsp/items/itemsList.jsp -->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 校验器 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- hibernate校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，在资源文件中配置校验错误信息。如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名-->
		<property name="basenames">
       	 <list>    
            <value>classpath:CustomValidationMessages</value> 
       	 </list>   
    	</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	<!-- 
		全局异常处理器
		只要实现了HandlerExceptionResolver接口就是全局异常处理器
	 -->
	<bean class="com.jimmy.ssm.exception.CustomExceptionResolver"></bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸5MB -->
		<property name="maxUploadSize">
			<value>5242800</value>
		</property>
	</bean>
	
</beans>